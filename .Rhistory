source('code/functions/plot_temperature_trend.R')
source('code/functions/plot_drought_trend.R')
plot_data <- tibble(
data = list(daily_weather, dry_periods),
func = list(plot_temperature_trend, plot_drought_trend),
filename = c("temperature_trend.pdf", "drought_trend.pdf")
)
pmap(plot_data, function(data, func, filename) {
plot_obj <- func(data)
ggsave(filename = paste0('output/', filename), plot = plot_obj, width = 10, height = 6, dpi = 300, device = cairo_pdf)
})
plot_data <- tibble(
data = list(daily_weather, dry_periods),
func = list(plot_temperature_trend, plot_drought_trend),
filename = c("temperature_trend.pdf", "drought_trend.pdf")
)
pmap(list(
data = plot_data$data,
func = plot_data$func,
filename = plot_data$filename
), function(data, func, filename) {
plot_obj <- func(data)
ggsave(filename = paste0('output/', filename), plot = plot_obj, width = 10, height = 6, dpi = 300, device = cairo_pdf)
})
plot_data <- tibble(
data = list(daily_weather, dry_periods),
func = list(plot_temperature_trend, plot_drought_trend),
filename = c("temperature_trend.pdf", "drought_trend.pdf")
)
pmap(plot_data, function(data, func, filename) {
plot_obj <- func(data)
ggsave(filename = paste0('output/', filename), plot = plot_obj, width = 10, height = 6, dpi = 300, device = cairo_pdf)
})
daily_weather <- read_rds('input/daily_weather.rds')
dry_periods <- read_rds('input/dry_periods.rds')
pmap(plot_data, function(data, func, filename) {
plot_obj <- func(data)
ggsave(filename = paste0('output/', filename), plot = plot_obj, width = 10, height = 6, dpi = 300, device = cairo_pdf)
})
source('code/functions/create_fire_map.R')
source('code/functions/create_heatmap.R')
# list with yearly data
map_data <- fires_sf %>% split(.$ano)
source('code/functions/plot_temperature_trend.R')
source('code/functions/plot_drought_trend.R')
plot_data <- tibble(
data = list(daily_weather, dry_periods),
func = list(plot_temperature_trend, plot_drought_trend),
filename = c("temperature_trend.pdf", "drought_trend.pdf")
)
pmap(plot_data, function(data, func, filename) {
plot_obj <- func(data)
ggsave(filename = paste0('output/', filename), plot = plot_obj, width = 10, height = 6, dpi = 300, device = cairo_pdf)
})
plot_data <- tibble(
data = list(daily_weather, dry_periods),
func = list(plot_temperature_trend, plot_drought_trend),
filename = c("temperature_trend.pdf", "drought_trend.pdf")
)
pmap(plot_data, function(data, func, filename) {
print(paste("Processing:", filename))
plot_obj <- func(data)
ggsave(filename = paste0('output/', filename), plot = plot_obj, width = 10, height = 6, dpi = 300, device = cairo_pdf)
})
# Create a tibble with the correct function-data pairings
plot_data <- tibble(
data = list(daily_weather, dry_periods),
func = list(plot_temperature_trend, plot_drought_trend),
filename = c("temperature_trend.pdf", "drought_trend.pdf")
)
# Use pmap to apply the functions to the correct data
pmap(plot_data, function(data, func, filename) {
print(paste("Processing:", filename))
plot_obj <- func(data)
ggsave(filename = paste0('output/', filename), plot = plot_obj, width = 10, height = 6, dpi = 300, device = cairo_pdf)
})
# Create separate entries for each function-data pair
plot_data <- tibble(
data = list(daily_weather, dry_periods),
func = list(plot_temperature_trend, plot_drought_trend),
filename = c("temperature_trend.pdf", "drought_trend.pdf")
)
# Use pmap to apply the functions to the correct data
pmap(plot_data, function(data, func, filename) {
print(paste("Processing:", filename))
plot_obj <- func(data)
ggsave(filename = paste0('output/', filename), plot = plot_obj, width = 10, height = 6, dpi = 300, device = cairo_pdf)
})
# Create separate tibbles for each function-data pair
temperature_data <- tibble(
data = list(daily_weather),
func = list(plot_temperature_trend),
filename = "temperature_trend.pdf"
)
drought_data <- tibble(
data = list(dry_periods),
func = list(plot_drought_trend),
filename = "drought_trend.pdf"
)
# Combine the tibbles
plot_data <- bind_rows(temperature_data, drought_data)
# Use pmap to apply the functions to the correct data
pmap(plot_data, function(data, func, filename) {
print(paste("Processing:", filename))
plot_obj <- func(data)
ggsave(filename = paste0('output/', filename), plot = plot_obj, width = 10, height = 6, dpi = 300, device = cairo_pdf)
})
# Combine the tibbles
plot_data <- list(temperature_data, drought_data)
# Combine the tibbles
plot_data <- list(temperature_data, drought_data)
# Use pmap to apply the functions to the correct data
pmap(plot_data, function(data, func, filename) {
print(paste("Processing:", filename))
plot_obj <- func(data)
ggsave(filename = paste0('output/', filename), plot = plot_obj, width = 10, height = 6, dpi = 300, device = cairo_pdf)
})
# Use pmap to apply the functions to the correct data
pmap(plot_data, names(plot_data), function(data, func, filename) {
print(paste("Processing:", filename))
plot_obj <- func(data)
ggsave(filename = paste0('output/', filename), plot = plot_obj, width = 10, height = 6, dpi = 300, device = cairo_pdf)
})
# Create separate tibbles for each function-data pair
temperature_data <- tibble(
data = list(daily_weather),
func = list(plot_temperature_trend),
filename = "temperature_trend.pdf"
)
drought_data <- tibble(
data = list(dry_periods),
func = list(plot_drought_trend),
filename = "drought_trend.pdf"
)
# Combine the tibbles
plot_data <- list(temperature_data, drought_data)
# Use pmap to apply the functions to the correct data
pmap(plot_data, function(data, func, filename) {
print(paste("Processing:", filename))
plot_obj <- func(data)
ggsave(filename = paste0('output/', filename), plot = plot_obj, width = 10, height = 6, dpi = 300, device = cairo_pdf)
})
# 06_visualize_weather.R - Weather Trends
# Purpose: Analyze and visualize weather trends such as drought and temperature changes.
# Author: Julio Meir
# Date: Feb-2025
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(lubridate)
daily_weather <- read_rds('input/daily_weather.rds')
dry_periods <- read_rds('input/dry_periods.rds')
source('code/functions/plot_temperature_trend.R')
source('code/functions/plot_drought_trend.R')
# Create separate tibbles for each function-data pair
temperature_data <- tibble(
data = list(daily_weather),
func = list(plot_temperature_trend),
filename = "temperature_trend.pdf"
)
drought_data <- tibble(
data = list(dry_periods),
func = list(plot_drought_trend),
filename = "drought_trend.pdf"
)
# Combine the tibbles into a single tibble
plot_data <- bind_rows(temperature_data, drought_data)
# Use pmap to apply the functions to the correct data
pmap(plot_data, function(data, func, filename) {
print(paste("Processing:", filename))
plot_obj <- func(data[[1]])  # Extract the actual data from the list
ggsave(
filename = paste0('output/', filename),
plot = plot_obj,
width = 10,
height = 6,
dpi = 300,
device = cairo_pdf
)
})
source('code/functions/plot_drought_trend.R')
plot_drought_trend()
plot_drought_trend
# 06_visualize_weather.R - Weather Trends
# Purpose: Analyze and visualize weather trends such as drought and temperature changes.
# Author: Julio Meir
# Date: Feb-2025
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(lubridate)
daily_weather <- read_rds('input/daily_weather.rds')
dry_periods <- read_rds('input/dry_periods.rds')
source('code/functions/plot_temperature_trend.R')
source('code/functions/plot_drought_trend.R')
# Create separate tibbles for each function-data pair
temperature_data <- tibble(
data = list(daily_weather),
func = list(plot_temperature_trend),
filename = "temperature_trend.pdf"
)
drought_data <- tibble(
data = list(dry_periods),
func = list(plot_drought_trend),
filename = "drought_trend.pdf"
)
# Combine the tibbles into a single tibble
plot_data <- bind_rows(temperature_data, drought_data)
# Use pmap to apply the functions to the correct data
pmap(plot_data, function(data, func, filename) {
print(paste("Processing:", filename))
plot_obj <- func(data[[1]])  # Extract the actual data from the list
ggsave(
filename = paste0('output/', filename),
plot = plot_obj,
width = 10,
height = 6,
dpi = 300,
device = cairo_pdf
)
})
head(temperature_data$data)
# 06_visualize_weather.R - Weather Trends
# Purpose: Analyze and visualize weather trends such as drought and temperature changes.
# Author: Julio Meir
# Date: Feb-2025
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(lubridate)
daily_weather <- read_rds('input/daily_weather.rds')
dry_periods <- read_rds('input/dry_periods.rds')
source('code/functions/plot_temperature_trend.R')
source('code/functions/plot_drought_trend.R')
# Create separate tibbles for each function-data pair
temperature_data <- tibble(
data = list(daily_weather),
func = list(plot_temperature_trend),
filename = "temperature_trend.pdf"
)
drought_data <- tibble(
data = list(dry_periods),
func = list(plot_drought_trend),
filename = "drought_trend.pdf"
)
# Combine the tibbles into a single tibble
plot_data <- bind_rows(temperature_data, drought_data)
# Use pmap to apply the functions to the correct data
pmap(plot_data, function(data, func, filename) {
print(paste("Processing:", filename))
plot_obj <- func(data[[1]])  # Extract the actual data from the list
ggsave(
filename = paste0('output/', filename),
plot = plot_obj,
width = 10,
height = 6,
dpi = 300,
device = cairo_pdf
)
})
source('code/functions/plot_temperature_trend.R')
# Create separate tibbles for each function-data pair
temperature_data <- tibble(
data = list(daily_weather),
func = list(plot_temperature_trend),
filename = "temperature_trend.pdf"
)
drought_data <- tibble(
data = list(dry_periods),
func = list(plot_drought_trend),
filename = "drought_trend.pdf"
)
# Combine the tibbles into a single tibble
plot_data <- bind_rows(temperature_data, drought_data)
# Use pmap to apply the functions to the correct data
pmap(plot_data, function(data, func, filename) {
print(paste("Processing:", filename))
plot_obj <- func(data[[1]])  # Extract the actual data from the list
ggsave(
filename = paste0('output/', filename),
plot = plot_obj,
width = 10,
height = 6,
dpi = 300,
device = cairo_pdf
)
})
# 06_visualize_weather.R - Weather Trends
# Purpose: Analyze and visualize weather trends such as drought and temperature changes.
# Author: Julio Meir
# Date: Feb-2025
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(lubridate)
daily_weather <- read_rds('input/daily_weather.rds')
dry_periods <- read_rds('input/dry_periods.rds')
source('code/functions/plot_temperature_trend.R')
source('code/functions/plot_drought_trend.R')
# Create separate tibbles for each function-data pair
temperature_data <- tibble(
data = list(daily_weather),
func = list(plot_temperature_trend),
filename = "temperature_trend.pdf"
)
drought_data <- tibble(
data = list(dry_periods),
func = list(plot_drought_trend),
filename = "drought_trend.pdf"
)
# Combine the tibbles into a single tibble
plot_data <- bind_rows(temperature_data, drought_data)
# Apply the plotting functions and save the plots
pmap(plot_data, function(data, func, filename) {
print(paste("Processing:", filename))
# Extract the actual data frame from the list-column
actual_data <- data[[1]]
# Generate the plot using the respective function
plot_obj <- func(actual_data)
# Save the plot to the specified filename within the 'output' directory
ggsave(
filename = file.path('output', filename),
plot     = plot_obj,
width    = 10,
height   = 6,
dpi      = 300,
device   = cairo_pdf
)
})
plot_drought_trend <- function(drought_data) {
# Categorize the number of drought periods
result_modified <- drought_data %>%
mutate(period_category = case_when(
n_30days_periods == 0 ~ "0 periods",
n_30days_periods == 1 ~ "1 period",
n_30days_periods >= 2 ~ "2 and more",
TRUE ~ NA_character_
)) %>%
filter(!is.na(period_category))
# Create the bar plot
drought_plot <- ggplot(result_modified, aes(x = ano)) +
geom_bar(aes(fill = period_category), position = "fill") +
theme_economist_white() +
scale_fill_manual(
values = c(
"0 periods"  = economist_pal()(8)[1],
"1 period"   = economist_pal()(8)[5],
"2 and more" = economist_pal()(8)[7]
)
) +
scale_y_continuous(labels = percent_format(), expand = expansion(mult = c(0, 0.05))) +
scale_x_continuous(
breaks = seq(
from = min(result_modified$ano, na.rm = TRUE),
to   = max(result_modified$ano, na.rm = TRUE),
by   = 1
)
) +
labs(
title    = "Evolution of Extended Drought Periods in Brazil",
subtitle = "Proportion of weather stations experiencing different numbers of 30-day drought periods",
x        = "Year",
y        = "Proportion of Stations",
fill     = "Number of Dry Periods",
caption  = "Source: INMET"
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(face = "bold", size = 14),
plot.subtitle = element_text(size = 12),
legend.title = element_text(face = "bold")
)
return(drought_plot)
}
# Combine the tibbles into a single tibble
plot_data <- bind_rows(temperature_data, drought_data)
# Apply the plotting functions and save the plots
pmap(plot_data, function(data, func, filename) {
print(paste("Processing:", filename))
# Extract the actual data frame from the list-column
actual_data <- data[[1]]
# Generate the plot using the respective function
plot_obj <- func(actual_data)
# Save the plot to the specified filename within the 'output' directory
ggsave(
filename = file.path('output', filename),
plot     = plot_obj,
width    = 10,
height   = 6,
dpi      = 300,
device   = cairo_pdf
)
})
# 06_visualize_weather.R - Weather Trends
# Purpose: Analyze and visualize weather trends such as drought and temperature changes.
# Author: Julio Meir
# Date: Feb-2025
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(lubridate)
daily_weather <- read_rds('input/daily_weather.rds')
dry_periods <- read_rds('input/dry_periods.rds')
source('code/functions/plot_temperature_trend.R')
source('code/functions/plot_drought_trend.R')
# Create separate tibbles for each function-data pair
temperature_data <- tibble(
data = list(daily_weather),
func = list(plot_temperature_trend),
filename = "temperature_trend.pdf"
)
drought_data <- tibble(
data = list(dry_periods),
func = list(plot_drought_trend),
filename = "drought_trend.pdf"
)
# Combine the tibbles into a single tibble
plot_data <- bind_rows(temperature_data, drought_data)
# Apply the plotting functions and save the plots
pmap(plot_data, function(dataset, func, filename) {
print(paste("Processing:", filename))
# Generate the plot using the respective function
plot_obj <- func(dataset)
# Save the plot to the specified filename within the 'output' directory
ggsave(
filename = file.path('output', filename),
plot = plot_obj,
width = 10,
height = 6,
dpi = 300,
device = cairo_pdf
)
print(paste("Successfully saved:", filename))
})
# 06_visualize_weather.R - Weather Trends
# Purpose: Analyze and visualize weather trends such as drought and temperature changes.
# Author: Julio Meir
# Date: Feb-2025
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(lubridate)
daily_weather <- read_rds('input/daily_weather.rds')
dry_periods <- read_rds('input/dry_periods.rds')
source('code/functions/plot_temperature_trend.R')
source('code/functions/plot_drought_trend.R')
# Create separate tibbles for each function-data pair
temperature_data <- tibble(
data = list(daily_weather),
func = list(plot_temperature_trend),
filename = "temperature_trend.pdf"
)
drought_data <- tibble(
data = list(dry_periods),
func = list(plot_drought_trend),
filename = "drought_trend.pdf"
)
# Combine the tibbles into a single tibble
plot_data <- bind_rows(temperature_data, drought_data)
# Apply the plotting functions and save the plots
pmap(plot_data, function(dataset, func, filename) {
print(paste("Processing:", filename))
# Generate the plot using the respective function
plot_obj <- func(dataset)
# Save the plot to the specified filename within the 'output' directory
ggsave(
filename = file.path('output', filename),
plot = plot_obj,
width = 10,
height = 6,
dpi = 300,
device = cairo_pdf
)
print(paste("Successfully saved:", filename))
})
daily_weather <- read_rds('input/daily_weather.rds')
dry_periods <- read_rds('input/dry_periods.rds')
source('code/functions/plot_temperature_trend.R')
source('code/functions/plot_drought_trend.R')
# Generate the plot
drought_plot <- plot_drought_trend(dry_periods)
plot_drought_trend(dry_periods)
plot_drought_trend(dry_periods)
aaa <- dry_periods %>%
mutate(period_category = case_when(
n_30days_periods == 0 ~ "0 periods",
n_30days_periods == 1 ~ "1 period",
n_30days_periods >= 2 ~ "2 and more",
TRUE ~ NA_character_
))
dry_periods
aaa <- dry_periods %>%
mutate(period_category = case_when(
n_30days_periods == 0 ~ "0 periods",
n_30days_periods == 1 ~ "1 period",
n_30days_periods >= 2 ~ "2 and more",
TRUE ~ NA
))
aaa <- dry_periods %>%
mutate(period_category = case_when(
n_30days_periods == 0 ~ "0 periods",
n_30days_periods == 1 ~ "1 period",
n_30days_periods >= 2 ~ "2 and more",
TRUE ~ NA
))
aaa <- dry_periods %>%
mutate(period_category = case_when(
n_30days_periods == 0 ~ "0 periods",
n_30days_periods == 1 ~ "1 period",
n_30days_periods >= 2 ~ "2 and more",
TRUE ~ NA
))
